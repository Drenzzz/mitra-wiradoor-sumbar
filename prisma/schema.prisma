// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Model user
model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  fullName String
  username String    @unique
  password String    
  role     Role      @default(STAF)
  articles Article[] 
}

// Model kategori
model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String?
  products    Product[]
}

// Model produk
model Product {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String
  specifications String
  imageUrl       String
  
  // Kunci relasi ke Kategori
  categoryId String   @db.ObjectId
  category   Category @relation(fields: [categoryId], references: [id])
}

// Model inquiry
model Inquiry {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  senderName  String
  senderEmail String
  subject     String
  message     String
  status      InquiryStatus @default(NEW)
  createdAt   DateTime      @default(now())
}

// Model artikel
model Article {
  id               String        @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  slug             String        @unique
  content          String
  featuredImageUrl String
  status           ArticleStatus @default(DRAFT)
  publishedAt      DateTime?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  
  // Kunci relasi ke User (penulis)
  authorId String @db.ObjectId
  author   User   @relation(fields: [authorId], references: [id])
}

// ENUM untuk Role Pengguna
enum Role {
  ADMIN
  STAF
}

// ENUM untuk Status Pesan Masuk
enum InquiryStatus {
  NEW
  READ
  REPLIED
}

// ENUM untuk Status Artikel
enum ArticleStatus {
  PUBLISHED
  DRAFT
}